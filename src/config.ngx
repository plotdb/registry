upstream register_api {
  server !{ip}:!{port};
}

server {
  listen 443;
  include !{etc_path}/mime.types;
  server_name !{hostname};
  ssl on;
  ssl_certificate !{cert.crt};
  ssl_certificate_key !{cert.key};
  root !{root};

  location = /err/490 {
    error_page 490 /err/490.html;
    return 490;
  }

  # put at the bottom
  location ~ \.(?:ico|css|js|gif|jpe?g|png|svg|woff|ttf|otf)$ {
    expires 1d;
    add_header Pragma public;
    add_header Cache-Control public;
  }

  location ~ ^/(.*)$ {
    root !{root};
    try_files /$1 @apiserver;
  }

  location @apiserver {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-NginX-Proxy true;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_pass http://registry_api;

    # we use location block instead of error_page directive to handle error 490
    # because cookie wont pass through proxy_intercept_errors to error_page dir.
    proxy_intercept_errors on;

    proxy_redirect off;
    #limit_req zone=api burst=7 nodelay;
  }
}

server {
  listen      80;
  server_name !{hostname};
  add_header Strict-Transport-Security "max-age=16070400; includeSubDomains";
  location / {
    if ($http_user_agent !~* (facebook) ) {
	return 301 https://$server_name$request_uri;
    }
    root !{root};
  }
}
